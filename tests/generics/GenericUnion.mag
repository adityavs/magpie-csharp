// expected: true
// expected: 1
// expected: false
// expected: 2
// expected: true
// expected: 3
// expected: 4

Main (->)
    def a <- Bar 1
    Print a.Bar?.String
    Print a.BarValue.String
    
    def b <- Bar "2"
    Print a.Bang?.String
    Print b.BarValue
    
    def c <- Bar[Bool] true
    Print c.BarValue.String
    
    //### bob: you should also be able to do Bar (3, 4) here, but
    // the automatic tuple unwrapping when matching function args
    // break this (it looks for Bar (a, b) and doesn't match Bar (a).
    def d <- Bang (3, 4)
    Print d.BangValue
end

Print (a Int, b Int ->)
    Print a.String
    Print b.String
end

union Foo[T]
    Bar   T
    Bang  (T, T)
end
