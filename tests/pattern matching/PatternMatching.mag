Main (->)
/*
    // atomic types
    def b <- 123
    match b
        case 1 then Print "1"
        case 2 then Print "2"
        case _ then Print "any"
    end
    
    def c <- "foo"
    match c
        case "bar" then Print "bar"
        case "foo" then Print "foo"
        case _     then Print "any"
    end
    
    // unions
    def d <- Banana
    match d
        case Apple  then Print "apple"
        case Banana then Print "banana"
        case Cherry then Print "cherry"
    end
    
    // union values
    def e <- Inches 23
    match e
        case Inches 12 then Print "twelve inches"
        case Feet 1    then Print "one foot"
        case Inches a  then Print a.String
        case Feet _    then Print "feet"
    end
    
    // structs
    def f <- Point (2, 3)
    match f
        case Point (0, 1) then Print "y unit"
        case Point (1, 0) then Print "x unit"
        case Point (a, b) then Print "other"
    end
    
    // tuples
    def g <- (1, true)
    match g
        case (3, false) then Print "3 false"
        case (_, false) then Print "any false"
        case (a, true)  then Print "something true"
        case b          then Print "is this even valid?"
    end
    
    // combined
    def h <- Add (Literal 1, Add (Literal 2, Literal 3))
    match h
        case Literal 1          then Print "one"
        case Literal value      then Print value.String
        case Add (left, right)  then Print "add"
        case Add (Literal a, _) then Print "add literal"
    end
    
    // nested matching
    def i <- 1
    def j <- 2
    match i
        case 1 then
            match j with
                case 1 then Print "j 1"
                case 2 then Print "j 2"
                case _ then Print "j else"
            end
        case 2 then Print "i 2"
    end
    */
    ()
end

union Fruit
    Apple
    Banana
    Cherry
end

union Measure
    Inches Int
    Feet   Int
end

union Expr
    Literal Int
    Add     (Expr, Expr)
end

struct Point
    X Int
    Y Int
end
